apiVersion: batch/v1
kind: Job
metadata:
  name: {{ include "mychart.fullname" . }}
  labels:
    {{- include "mychart.labels" . | nindent 4 }}
    benchmark: controller
spec:
  template:
    metadata:
      labels:
        {{- include "mychart.labels" . | nindent 8 }}
        benchmark: controller
    spec:
      serviceAccountName: {{ include "mychart.fullname" . }}
      initContainers:
      ################################## WORKMODEL GENERATION ##################################
      - name: workmodel-gen
        image: {{ include "mychart.workmodelGen.image" . }}
        imagePullPolicy: Always
        command: ["/app/entrypoint.sh"]
        args:
        - --config-file
        - /config/WorkmodelParameters.json
        {{- toYaml .Values.workmodel_gen.extraArgs | nindent 8 }}
        volumeMounts:
        - name: dataset
          mountPath: "/dataset"
          readOnly: true
        - name: podshared
          mountPath: "/podshared"
          readOnly: false
        - name: workmodel-params
          mountPath: "/config"
          readOnly: true
        - name: cluster-resources
          mountPath: "/resources"
          readOnly: true
      ################################## TEMPLATING K8S FILES ##################################
      - name: templater
        image: {{ include "mychart.templater.image" . }}
        imagePullPolicy: Always
        command: ["/app/entrypoint.sh"]
        args:
        - --config-file
        - /config/K8sParameters.json
        - -y
        {{- toYaml .Values.templater.extraArgs | nindent 8 }}
        volumeMounts:
        - name: dataset
          mountPath: "/dataset"
          readOnly: true
        - name: functions
          mountPath: "/InternalServiceFunctions"
          readOnly: true
        - name: podshared
          mountPath: "/podshared"
          readOnly: false
        - name: k8s-params
          mountPath: "/config"
          readOnly: true
      containers:
      ################################## RUNNING THE TRACE ##################################
      - name: runner
        image: {{ include "mychart.runner.image" . }}
        imagePullPolicy: Always
        command: ["/app/entrypoint.sh", "--config-file", "/config/RunnerParameters.json"]
        args:
        - --config-file
        - /config/RunnerParameters.json
        {{- toYaml .Values.runner.extraArgs | nindent 8 }}
        ports:
          - name: metrics
            containerPort: 8080
        volumeMounts:
        - name: dataset
          mountPath: "/dataset"
          readOnly: true
        - name: podshared
          mountPath: "/podshared"
          readOnly: true
        - name: runner-params
          mountPath: "/config"
        - name: result
          mountPath: "/result"
          readOnly: false
      restartPolicy: Never
      volumes:
        ## PVC linking to contents on node-2
        - name: dataset
          persistentVolumeClaim:
            claimName: {{ include "mychart.datasetPV" . }}
        - name: functions
          persistentVolumeClaim:
            claimName: {{ include "mychart.functionsPV" . }}
        - name: result
          persistentVolumeClaim:
            claimName: {{ include "mychart.resultPV" . }}
        # Workaround while we do not create cluster-resources with the cloudlab profile.
        - name: cluster-resources
          configMap:
            name: {{ include "mychart.clusterResourcesCM" . }}
        ## EmptyDIR to share the generated files between (init-)containers
        - name: podshared
          emptyDir: {}
        ## xyzParameters.json config files for all the steps
        - name: workmodel-params
          configMap:
            name: {{ include "mychart.workmodelParamsCM" . }}
        - name: k8s-params
          configMap:
            name: {{ include "mychart.kubernetesParamsCM" . }}
        - name: runner-params
          configMap:
            name: {{ include "mychart.csvRunnerParamsCM" . }}
  backoffLimit: 0
